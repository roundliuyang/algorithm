package com.yly.algorithm.二分法;

/**
 给定一个整数矩阵 A, 它有如下特性:
 • 相邻的整数不同
 • 矩阵有 n 行 m 列，n和m不会小于3。
 • 对于所有的 i < n, 都有 A[i][0] < A[i][1] && A[i][m - 2] > A[i][m - 1]
 • 对于所有的 j < m, 都有 A[0][j] < A[1][j] && A[n - 2][j] > A[n - 1][j]
 我们定义一个位置 [i,j] 是峰值, 当且仅当它满足:
 A[i][j] > A[i + 1][j] && A[i][j] > A[i - 1][j] &&
 A[i][j] > A[i][j + 1] && A[i][j] > A[i][j - 1]
 找到该矩阵的一个峰值元素, 返回它的坐标.
 保证至少存在一个峰值, 而如果存在多个峰值, 返回任意一个即可.
 */
public class 寻找峰值II {
    /**
     * 就這樣吧，我不會
     */
}
